import nmap
import json
import datetime
import sys
import os

def scan_localhost():
    nm = nmap.PortScanner()
    print("Scanning your computer for security risks... Please wait.", flush=True)
    nm.scan('127.0.0.1', arguments='-sV --script vuln')
    
    report = {
        "scan_time": datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "host": "Your Computer (127.0.0.1)",
        "explanation": {
            "Port Number": "The specific network port that was scanned.",
            "Protocol": "The type of communication protocol used (e.g., TCP or UDP).",
            "Service Detected": "The name of the service running on the port, if detected.",
            "Software Version": "The version of the service software, if detected.",
            "Risk Assessment": "An evaluation of the security risk posed by this service:",
            "Risk Levels": {
                "ðŸŸ¢ Low": "No immediate threat. Generally safe.",
                "ðŸŸ¡ Medium": "Potential risk. Further investigation is recommended.",
                "ðŸ”´ High": "Urgent! Immediate action is recommended to secure this service."
            }
        },
        "findings": []
    }
    
    risk_levels = {"Low": "ðŸŸ¢ Low - No immediate threat.",
                   "Medium": "ðŸŸ¡ Medium - Potential risk, investigate further.",
                   "High": "ðŸ”´ High - Urgent! Immediate action recommended."}
    
    for proto in nm['127.0.0.1'].all_protocols():
        ports = nm['127.0.0.1'][proto].keys()
        for port in ports:
            service = nm['127.0.0.1'][proto][port]
            risk = "Low"
            
            if "vulners" in service:
                vulns = service["vulners"]
                for vuln in vulns:
                    if 'CVSS' in vuln and float(vuln['CVSS']) >= 7:
                        risk = "High"
                    else:
                        risk = "Medium"
            
            finding = {
                "Port Number": port,
                "Protocol": proto.upper(),
                "Service Detected": service.get("name", "Unknown") or "Unknown",
                "Software Version": service.get("version", "Unknown") or "Unknown",
                "Risk Assessment": risk_levels[risk]
            }
            
            if "vulners" in service:
                finding["Vulnerabilities"] = []
                for vuln in service["vulners"]:
                    finding["Vulnerabilities"].append({
                        "CVE ID": vuln.get("id", "Unknown") or "Unknown",
                        "Description": vuln.get("description", "No description available") or "Unknown",
                        "Severity": risk_levels[risk]
                    })
            
            report["findings"].append(finding)
    
    output_path = os.path.expanduser("~/Desktop/nmap_scan_report.json")

    with open(output_path, "w", encoding="utf-8") as f:
        json.dump(report, f, indent=4, ensure_ascii=False)
    
    # Print report to screen
    print("\n=== Security Scan Report ===\n", flush=True)
    print(f"Scan Time: {report['scan_time']}", flush=True)
    print(f"Scanned Host: {report['host']}", flush=True)
    print("\nFindings:", flush=True)
    
    for finding in report["findings"]:
        print("----------------------------------------", flush=True)
        print(f"Port: {finding['Port Number']}", flush=True)
        print(f"Protocol: {finding['Protocol']}", flush=True)
        print(f"Service: {finding['Service Detected']}", flush=True)
        print(f"Version: {finding['Software Version']}", flush=True)
        print(f"Risk Level: {finding['Risk Assessment']}", flush=True)
        if "Vulnerabilities" in finding:
            for vuln in finding["Vulnerabilities"]:
                print(f"- {vuln['CVE ID']}: {vuln['Description']} ({vuln['Severity']})", flush=True)
    
    print("\nâœ… Scan complete! Report saved as 'nmap_scan_report.json'.", flush=True)


if __name__ == "__main__":
    scan_localhost()
